using UnityEngine;
using UnityEngine.AI;
using Unity.AI.Navigation;

public class NewMonoBehaviourScript : MonoBehaviour
{
    public Transform player; // ?????, ???????? ?????????? ????
    public NavMeshAgent enemy; // NavMeshAgent ??? ?????????? ????????? ?????
    public NavMeshSurface navMeshSurface; // NavMeshSurface ??? ??????????? ?????
    //public GameObject bulletPrefab; // ?????? ????
    //public Transform shootPoint; // ?????, ?? ??????? ???? ????????

    public float PlayerRast = 5.5f; // ?????????? ?? ?????? ??? ?????????? ??????
    public float levelcount = 0; // ??????? ???????
    public float rast = 5.5f; // ?????????? ?? ?????????? ??????
    public float stopDistance = 2.0f; // ?????????, ??????? ???? ????????? ?? ??????
    public float detectionRange = 10.0f; // ???????????? ?????????, ?? ??????? ???? ???????? ??????
    //public float fireRate = 1.5f; // ???????? ???????? (??? ? ???????)
    //public float bulletSpeed = 10f; // ???????? ????
    //public float bulletDamage = 25f; // ???? ?? ????

    //private float nextFireTime; // ????? ?????????? ????????

    void Start()
    {
        navMeshSurface.BuildNavMesh();
        if (player != null)
        {
            enemy.stoppingDistance = stopDistance; // ????????????? ????????? ?????????
            //enemy.SetDestination(player.position);
        }

    }

    void Update()
    {
        if (player != null)
        {
            float distanceToPlayer = Vector3.Distance(enemy.transform.position, player.position);

            // ???? ????? ? ???????? ?????????, ???? ???????? ????????
            if (distanceToPlayer <= detectionRange)
            {
                if (distanceToPlayer > stopDistance)
                {
                    enemy.SetDestination(player.position);
                }
                else
                {
                    enemy.ResetPath(); // ????????????? ?????, ???? ?? ??????? ??????
                }
            }
            else
            {
                enemy.ResetPath(); // ?????????? ???????, ???? ????? ??? ?????????
            }
        }
        else
        {
            if (enemy != null)
            {
                enemy.ResetPath(); // ?????????? ??????? ?????
            }

            // ??????? ????????? ? ???????
            Debug.Log("????? ?????????. ???? ?????? ?? ?????????? ????.");
        }
        if (player.position.x >= PlayerRast)
        {
            levelcount++;
            PlayerRast = rast;
            rast = 5.5f + (5 + 2 * (int)(levelcount / 4)) * 3.4f;
            navMeshSurface.BuildNavMesh();
        }
    }

    //void ShootAtPlayer()
    //{
    //    if (player == null) return;
    //    // ??????? ????
    //    GameObject bullet = Instantiate(bulletPrefab, shootPoint.position, Quaternion.identity);

    //    // ???????????? ??????????? ???????? ? ????? ????????? (????????? ???????)
    //    Vector3 direction = (player.position - shootPoint.position).normalized;
    //    direction.x += Random.Range(-0.1f, 0.1f); // ????????? ??????? ?? X
    //    direction.y += Random.Range(-0.1f, 0.1f); // ????????? ??????? ?? Y

    //    // ????????? ???????? ????
    //    Rigidbody bulletRb = bullet.GetComponent<Rigidbody>();
    //    bulletRb.linearVelocity = direction * bulletSpeed;

    //    // ????????? ?????????, ????? ???? ???????? ????
    //    Bullet bulletScript = bullet.GetComponent<Bullet>();
    //    if (bulletScript != null)
    //    {
    //        bulletScript.damage = bulletDamage;
    //    }

    //    // ?????????? ???? ????? 5 ??????
    //    Destroy(bullet, 5f);
    //}
}
